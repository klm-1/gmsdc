#include "gmlexprcontext.h"

#include <map>
#include <string>

using namespace std;


const map<string, vector<ExprContext::Type>> ExprContext::argContext_{
    { "achievement_show_challenge_notifications", { Bool, Bool, Bool } },
    { "application_surface_draw_enable", { Bool } },
    { "application_surface_enable", { Bool } },
    { "audio_create_buffer_sound", { Any, BufferFormat, Any, Any, Any, AudioType } },
    { "audio_create_play_queue", { BufferFormat, Any, AudioType } },
    { "audio_create_sync_group", { Bool } },
    { "audio_debug", { Bool } },
    { "audio_exists", { Sound } },
    { "audio_falloff_set_model", { AudioFalloff } },
    { "audio_get_name", { Sound } },
    { "audio_get_type", { Sound } },
    { "audio_group_is_loaded", { AudioGroup } },
    { "audio_group_load", { AudioGroup } },
    { "audio_group_load_progress", { AudioGroup } },
    { "audio_group_name", { AudioGroup } },
    { "audio_group_set_gain", { AudioGroup, Any, Any } },
    { "audio_group_stop", { AudioGroup } },
    { "audio_group_unload", { AudioGroup } },
    { "audio_is_paused", { Sound } },
    { "audio_is_playing", { Sound } },
    { "audio_pause_sound", { Sound } },
    { "audio_play_sound", { Sound, Any, Bool } },
    { "audio_play_sound_at", { Sound, Any, Any, Any, Any, Any, Any, Bool, Any } },
    { "audio_play_sound_on", { Any, Sound, Bool, Any } },
    { "audio_resume_sound", { Sound } },
    { "audio_sound_gain", { Sound, Any, Any } },
    { "audio_sound_get_gain", { Sound } },
    { "audio_sound_get_pitch", { Sound } },
    { "audio_sound_get_track_position", { Sound } },
    { "audio_sound_length", { Sound } },
    { "audio_sound_pitch", { Sound, Any } },
    { "audio_sound_set_track_position", { Sound, Any } },
    { "audio_stop_sound", { Sound } },
    { "background_add", { Any, Bool, Bool } },
    { "background_assign", { Background, Background } },
    { "background_create_colour", { Any, Any, Color } },
    { "background_create_from_surface", { Any, Any, Any, Any, Any, Bool, Bool } },
    { "background_create_gradient", { Any, Any, Color, Color, Any } },
    { "background_delete", { Background } },
    { "background_duplicate", { Background } },
    { "background_exists", { Background } },
    { "background_flush", { Background } },
    { "background_get_height", { Background } },
    { "background_get_name", { Background } },
    { "background_get_texture", { Background } },
    { "background_get_uvs", { Background } },
    { "background_get_width", { Background } },
    { "background_prefetch", { Background } },
    { "background_replace", { Background, Any, Bool, Bool } },
    { "background_save", { Background, Any } },
    { "background_set_alpha_from_background", { Background, Background } },
    { "browser_input_capture", { Bool } },
    { "buffer_create", { Any, BufferType, Any } },
    { "buffer_create_from_vertex_buffer", { Any, BufferType, Any } },
    { "buffer_create_from_vertex_buffer_ext", { Any, BufferType, Any, Any, Any } },
    { "buffer_fill", { Any, Any, BufferFormat, Any, Any } },
    { "buffer_peek", { Any, Any, BufferFormat } },
    { "buffer_poke", { Any, Any, BufferFormat, Any } },
    { "buffer_read", { Any, BufferFormat } },
    { "buffer_seek", { Any, BufferSeekBase, Any } },
    { "buffer_sizeof", { BufferFormat } },
    { "buffer_write", { Any, BufferFormat, Any } },
    { "collision_circle", { Any, Any, Any, Object, Bool, Bool } },
    { "collision_ellipse", { Any, Any, Any, Any, Object, Bool, Bool } },
    { "collision_line", { Any, Any, Any, Any, Object, Bool, Bool } },
    { "collision_point", { Any, Any, Object, Bool, Bool } },
    { "collision_rectangle", { Any, Any, Any, Any, Object, Bool, Bool } },
    { "colour_get_blue", { Color } },
    { "colour_get_green", { Color } },
    { "colour_get_hue", { Color } },
    { "colour_get_red", { Color } },
    { "colour_get_saturation", { Color } },
    { "colour_get_value", { Color } },
    { "d3d_draw_cone", { Any, Any, Any, Any, Any, Any, Any, Any, Any, Bool, Any } },
    { "d3d_draw_cylinder", { Any, Any, Any, Any, Any, Any, Any, Any, Any, Bool, Any } },
    { "d3d_light_define_ambient", { Color } },
    { "d3d_light_define_direction", { Any, Any, Any, Any, Color } },
    { "d3d_light_define_point", { Any, Any, Any, Any, Any, Color } },
    { "d3d_light_enable", { Any, Bool } },
    { "d3d_model_cone", { Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Bool, Any } },
    { "d3d_model_cylinder", { Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Bool, Any } },
    { "d3d_model_primitive_begin", { Any, Primitive } },
    { "d3d_model_vertex_colour", { Any, Any, Any, Any, Color, Any } },
    { "d3d_model_vertex_normal_colour", { Any, Any, Any, Any, Any, Any, Any, Color, Any } },
    { "d3d_model_vertex_normal_texture_colour", { Any, Any, Any, Any, Any, Any, Any, Any, Any, Color, Any } },
    { "d3d_model_vertex_texture_colour", { Any, Any, Any, Any, Any, Any, Color, Any } },
    { "d3d_primitive_begin", { Primitive } },
    { "d3d_primitive_begin_texture", { Primitive, Any } },
    { "d3d_set_culling", { Bool } },
    { "d3d_set_fog", { Bool, Color, Any, Any } },
    { "d3d_set_hidden", { Bool } },
    { "d3d_set_lighting", { Bool } },
    { "d3d_set_perspective", { Bool } },
    { "d3d_set_shading", { Bool } },
    { "d3d_set_zwriteenable", { Bool } },
    { "d3d_vertex_colour", { Any, Any, Any, Color, Any } },
    { "d3d_vertex_normal_colour", { Any, Any, Any, Any, Any, Any, Color, Any } },
    { "d3d_vertex_normal_texture_colour", { Any, Any, Any, Any, Any, Any, Any, Any, Color, Any } },
    { "d3d_vertex_texture_colour", { Any, Any, Any, Any, Any, Color, Any } },
    { "date_set_timezone", { Timezone } },
    { "device_mouse_check_button", { Any, MouseButton } },
    { "device_mouse_check_button_pressed", { Any, MouseButton } },
    { "device_mouse_check_button_released", { Any, MouseButton } },
    { "device_mouse_dclick_enable", { Bool } },
    { "display_reset", { Any, Bool } },
    { "display_set_windows_alternate_vsync", { Bool } },
    { "display_set_windows_vertex_buffer_method", { VBMethod } },
    { "distance_to_object", { Object } },
    { "draw_background", { Background, Any, Any } },
    { "draw_background_ext", { Background, Any, Any, Any, Any, Any, Color, Any } },
    { "draw_background_general", { Background, Any, Any, Any, Any, Any, Any, Any, Any, Any, Color, Color, Color, Color, Any } },
    { "draw_background_part", { Background, Any, Any, Any, Any, Any, Any } },
    { "draw_background_part_ext", { Background, Any, Any, Any, Any, Any, Any, Any, Any, Color, Any } },
    { "draw_background_stretched", { Background, Any, Any, Any, Any } },
    { "draw_background_stretched_ext", { Background, Any, Any, Any, Any, Color, Any } },
    { "draw_background_tiled", { Background, Any, Any } },
    { "draw_background_tiled_ext", { Background, Any, Any, Any, Any, Color, Any } },
    { "draw_button", { Any, Any, Any, Any, Bool } },
    { "draw_circle", { Any, Any, Any, Bool } },
    { "draw_circle_colour", { Any, Any, Any, Color, Color, Bool } },
    { "draw_clear", { Color } },
    { "draw_clear_alpha", { Color, Any } },
    { "draw_ellipse", { Any, Any, Any, Any, Bool } },
    { "draw_ellipse_colour", { Any, Any, Any, Any, Color, Color, Bool } },
    { "draw_enable_alphablend", { Bool } },
    { "draw_enable_drawevent", { Bool } },
    { "draw_enable_swf_aa", { Bool } },
    { "draw_healthbar", { Any, Any, Any, Any, Any, Color, Color, Color, Any, Bool, Bool } },
    { "draw_line_colour", { Any, Any, Any, Any, Color, Color } },
    { "draw_line_width_colour", { Any, Any, Any, Any, Any, Color, Color } },
    { "draw_path", { Path, Any, Any, Bool } },
    { "draw_point_colour", { Any, Any, Color } },
    { "draw_primitive_begin", { Primitive } },
    { "draw_primitive_begin_texture", { Primitive, Any } },
    { "draw_rectangle", { Any, Any, Any, Any, Bool } },
    { "draw_rectangle", { Any, Any, Any, Any, Bool } },
    { "draw_rectangle_colour", { Any, Any, Any, Any, Color, Color, Color, Color, Bool } },
    { "draw_roundrect_colour", { Any, Any, Any, Any, Color, Color, Bool } },
    { "draw_roundrect_colour_ext", { Any, Any, Any, Any, Any, Any, Color, Color, Bool } },
    { "draw_roundrect_ext", { Any, Any, Any, Any, Any, Any, Bool } },
    { "draw_set_alpha_test", { Bool } },
    { "draw_set_blend_mode", { BlendMode } },
    { "draw_set_blend_mode_ext", { BlendModeExt, BlendModeExt } },
    { "draw_set_color", { Color } },
    { "draw_set_colour", { Color } },
    { "draw_set_colour_write_enable", { Bool, Bool, Bool, Bool } },
    { "draw_set_font", { Font } },
    { "draw_set_halign", { HAlign } },
    { "draw_set_valign", { VAlign } },
    { "draw_skeleton", { Sprite, Any, Any, Any, Any, Any, Any, Any, Any, Color, Any } },
    { "draw_skeleton_collision", { Sprite, Any, Any, Any, Any, Any, Any, Any, Color } },
    { "draw_skeleton_time", { Sprite, Any, Any, Any, Any, Any, Any, Any, Any, Color } },
    { "draw_sprite", { Sprite, Any, Any, Any } },
    { "draw_sprite_ext", { Sprite, Any, Any, Any, Any, Any, Any, Color, Any } },
    { "draw_sprite_general", { Sprite, Any, Any, Any, Any, Any, Any, Color, Color, Color, Color, Any } },
    { "draw_sprite_part", { Sprite, Any, Any, Any, Any, Any, Any, Any } },
    { "draw_sprite_part_ext", { Sprite, Any, Any, Any, Any, Any, Any, Any, Any, Any, Color, Any } },
    { "draw_sprite_pos", { Sprite, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any } },
    { "draw_sprite_stretched", { Sprite, Any, Any, Any, Any, Any } },
    { "draw_sprite_stretched_ext", { Sprite, Any, Any, Any, Any, Any, Color, Any } },
    { "draw_sprite_tiled", { Sprite, Any, Any, Any } },
    { "draw_sprite_tiled_ext", { Sprite, Any, Any, Any, Any, Any, Color, Any } },
    { "draw_surface_ext", { Any, Any, Any, Any, Any, Any, Color, Any } },
    { "draw_surface_general", { Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Color, Color, Color, Color, Any } },
    { "draw_surface_part_ext", { Any, Any, Any, Any, Any, Any, Any, Any, Any, Color, Any } },
    { "draw_surface_stretched_ext", { Any, Any, Any, Any, Any, Color, Any } },
    { "draw_surface_tiled_ext", { Any, Any, Any, Any, Any, Color, Any } },
    { "draw_text_colour", { Any, Any, Any, Color, Color, Color, Color, Any } },
    { "draw_text_ext_colour", { Any, Any, Any, Any, Any, Color, Color, Color, Color, Any } },
    { "draw_text_ext_transformed_colour", { Any, Any, Any, Any, Any, Any, Any, Any, Color, Color, Color, Color, Any } },
    { "draw_text_transformed_colour", { Any, Any, Any, Any, Any, Any, Color, Color, Color, Color, Any } },
    { "draw_triangle", { Any, Any, Any, Any, Any, Any, Bool } },
    { "draw_triangle_colour", { Any, Any, Any, Any, Any, Any, Color, Color, Color, Bool } },
    { "draw_vertex_colour", { Any, Any, Any, Color, Any } },
    { "draw_vertex_texture_colour", { Any, Any, Any, Any, Any, Color, Any } },
    { "ds_list_sort", { Any, Bool } },
    { "effect_create_above", { Effect, Any, Any, Any, Color } },
    { "effect_create_below", { Effect, Any, Any, Any, Color } },
    { "event_perform", { Event, Any } },
    { "event_perform_object", { Object, Event, Any } },
    { "external_define", { Any, Any, CallConv, CallArg, Any, CallArg, CallArg, CallArg, CallArg, CallArg, CallArg, CallArg, CallArg, CallArg, CallArg, CallArg } },
    { "facebook_login", { Any, FbLogin } },
    { "file_attributes", { Any, FileAttr } },
    { "file_find_first", { Any, FileAttr } },
    { "font_add", { Any, Any, Bool, Bool, Any, Any } },
    { "font_add_sprite", { Sprite, Any, Bool, Any } },
    { "font_add_sprite_ext", { Sprite, Any, Bool, Any } },
    { "font_delete", { Font } },
    { "font_exists", { Font } },
    { "font_get_bold", { Font } },
    { "font_get_first", { Font } },
    { "font_get_fontname", { Font } },
    { "font_get_italic", { Font } },
    { "font_get_last", { Font } },
    { "font_get_name", { Font } },
    { "font_get_size", { Font } },
    { "font_get_texture", { Font } },
    { "font_get_uvs", { Font } },
    { "font_replace", { Font, Any, Any, Bool, Bool, Any, Any } },
    { "font_replace_sprite", { Font, Sprite, Any, Bool, Any } },
    { "font_replace_sprite_ext", { Font, Sprite, Any, Bool, Any } },
    { "font_set_cache_size", { Font, Any } },
    { "gamepad_axis_value", { Any, GamepadInput } },
    { "gamepad_button_check", { Any, GamepadInput } },
    { "gamepad_button_check_pressed", { Any, GamepadInput } },
    { "gamepad_button_check_released", { Any, GamepadInput } },
    { "gamepad_button_value", { Any, GamepadInput } },
    { "gamepad_set_colour", { Any, Color } },
    { "gml_release_mode", { Bool } },
    { "instance_activate_object", { Object } },
    { "instance_activate_region", { Any, Any, Any, Any, Bool } },
    { "instance_change", { Object, Bool } },
    { "instance_copy", { Bool } },
    { "instance_create", { Any, Any, Object } },
    { "instance_deactivate_all", { Bool } },
    { "instance_deactivate_object", { Object } },
    { "instance_deactivate_region", { Any, Any, Any, Any, Bool, Bool } },
    { "instance_destroy", { Object } },
    { "instance_exists", { Object } },
    { "instance_find", { Object, Any } },
    { "instance_furthest", { Any, Any, Object } },
    { "instance_nearest", { Any, Any, Object } },
    { "instance_number", { Object } },
    { "instance_place", { Any, Any, Object } },
    { "instance_position", { Any, Any, Object } },
    { "keyboard_check", { KeyCode } },
    { "keyboard_check_direct", { KeyCode } },
    { "keyboard_check_pressed", { KeyCode } },
    { "keyboard_check_released", { KeyCode } },
    { "keyboard_clear", { KeyCode } },
    { "keyboard_get_map", { KeyCode } },
    { "keyboard_key_press", { KeyCode } },
    { "keyboard_key_release", { KeyCode } },
    { "keyboard_set_map", { KeyCode, KeyCode } },
    { "keyboard_set_numlock", { Bool } },
    { "keyboard_unset_map", { KeyCode } },
    { "matrix_get", { Matrix } },
    { "matrix_set", { Matrix, Any } },
    { "merge_colour", { Color, Color, Any } },
    { "mouse_check_button", { MouseButton } },
    { "mouse_check_button_pressed", { MouseButton } },
    { "mouse_check_button_released", { MouseButton } },
    { "mouse_clear", { MouseButton } },
    { "move_bounce_all", { Bool } },
    { "move_bounce_solid", { Bool } },
    { "mp_grid_add_instance", { Any, Object, Bool } },
    { "mp_grid_path", { Any, Path, Any, Any, Any, Any, Bool } },
    { "mp_linear_path", { Path, Any, Any, Any, Bool } },
    { "mp_linear_path_object", { Path, Any, Any, Any, Object } },
    { "mp_linear_step", { Any, Any, Any, Bool } },
    { "mp_linear_step_object", { Any, Any, Any, Object } },
    { "mp_potential_path", { Path, Any, Any, Any, Any, Bool } },
    { "mp_potential_path_object", { Path, Any, Any, Any, Any, Object } },
    { "mp_potential_settings", { Any, Any, Any, Bool } },
    { "mp_potential_step", { Any, Any, Any, Bool } },
    { "mp_potential_step_object", { Any, Any, Any, Object } },
    { "network_create_server", { NetworkType, Any, Any } },
    { "network_create_server_raw", { NetworkType, Any, Any } },
    { "network_create_socket", { NetworkType } },
    { "network_create_socket_ext", { NetworkType, Any } },
    { "network_set_config", { NetworkConf, Any } },
    { "object_exists", { Object } },
    { "object_get_depth", { Object } },
    { "object_get_mask", { Object } },
    { "object_get_name", { Object } },
    { "object_get_parent", { Object } },
    { "object_get_persistent", { Object } },
    { "object_get_physics", { Object } },
    { "object_get_solid", { Object } },
    { "object_get_sprite", { Object } },
    { "object_get_visible", { Object } },
    { "object_is_ancestor", { Object, Object } },
    { "object_set_depth", { Object, Any } },
    { "object_set_mask", { Object, Sprite } },
    { "object_set_persistent", { Object, Bool } },
    { "object_set_solid", { Object, Bool } },
    { "object_set_sprite", { Object, Sprite } },
    { "object_set_visible", { Object, Bool } },
    { "part_emitter_region", { Any, Any, Any, Any, Any, Any, EmitterShape, EmitterDistr } },
    { "part_particles_create_colour", { Any, Any, Any, Any, Color, Any } },
    { "part_system_automatic_draw", { Any, Bool } },
    { "part_system_automatic_update", { Any, Bool } },
    { "part_system_draw_order", { Any, Bool } },
    { "part_type_blend", { Any, Bool } },
    { "part_type_colour_mix", { Any, Color, Color } },
    { "part_type_colour1", { Any, Color } },
    { "part_type_colour2", { Any, Color, Color } },
    { "part_type_colour3", { Any, Color, Color, Color } },
    { "part_type_shape", { Any, PartShape } },
    { "part_type_sprite", { Any, Sprite, Bool, Bool, Bool } },
    { "path_add_point", { Path, Any, Any, Any } },
    { "path_append", { Path, Path } },
    { "path_assign", { Path, Path } },
    { "path_change_point", { Path, Any, Any, Any, Any } },
    { "path_clear_points", { Path } },
    { "path_delete", { Path } },
    { "path_delete_point", { Path, Any } },
    { "path_duplicate", { Path } },
    { "path_exists", { Path } },
    { "path_flip", { Path } },
    { "path_get_closed", { Path } },
    { "path_get_kind", { Path } },
    { "path_get_length", { Path } },
    { "path_get_name", { Path } },
    { "path_get_number", { Path } },
    { "path_get_point_speed", { Path, Any } },
    { "path_get_point_x", { Path, Any } },
    { "path_get_point_y", { Path, Any } },
    { "path_get_precision", { Path } },
    { "path_get_speed", { Path, Any } },
    { "path_get_x", { Path, Any } },
    { "path_get_y", { Path, Any } },
    { "path_insert_point", { Path, Any, Any, Any, Any } },
    { "path_mirror", { Path } },
    { "path_rescale", { Path, Any, Any } },
    { "path_reverse", { Path } },
    { "path_rotate", { Path, Any } },
    { "path_set_closed", { Path, Bool } },
    { "path_set_kind", { Path, Bool } },
    { "path_set_precision", { Path, Any } },
    { "path_shift", { Path, Any, Any } },
    { "path_start", { Path, Any, PathAction, Bool } },
    { "physics_fixture_set_awake", { Any, Bool } },
    { "physics_fixture_set_chain_shape", { Any, Bool } },
    { "physics_fixture_set_sensor", { Any, Bool } },
    { "physics_joint_distance_create", { Any, Any, Any, Any, Any, Any, Bool } },
    { "physics_joint_enable_motor", { Any, Bool } },
    { "physics_joint_friction_create", { Any, Any, Any, Any, Any, Any, Bool } },
    { "physics_joint_get_value", { Any, JointProp } },
    { "physics_joint_prismatic_create", { Any, Any, Any, Any, Any, Any, Any, Any, Bool, Any, Any, Bool, Bool } },
    { "physics_joint_pulley_create", { Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Bool } },
    { "physics_joint_revolute_create", { Any, Any, Any, Any, Any, Any, Bool, Any, Any, Bool, Bool } },
    { "physics_joint_rope_create", { Any, Any, Any, Any, Any, Any, Any, Bool } },
    { "physics_joint_set_value", { Any, JointProp, Any } },
    { "physics_joint_weld_create", { Any, Any, Any, Any, Any, Any, Any, Bool } },
    { "physics_joint_wheel_create", { Any, Any, Any, Any, Any, Any, Bool, Any, Any, Any, Bool } },
    { "physics_particle_create", { PhysicsPartTypeFlag, Any, Any, Any, Any, Color, Any, Any } },
    { "physics_particle_draw", { PhysicsPartTypeFlag, Any, Sprite, Any } },
    { "physics_particle_draw_ext", { PhysicsPartTypeFlag, Any, Sprite, Any, Any, Any, Any, Color, Any } },
    { "physics_particle_get_data", { Any, PhysicsPartDataFlag } },
    { "physics_particle_get_data_particle", { Any, Any, PhysicsPartDataFlag } },
    { "physics_particle_group_begin", { PhysicsPartTypeFlag, PhysicsGroupFlag, Any, Any, Any, Any, Any, Any, Color, Any, Any, Any } },
    { "physics_particle_group_get_data", { Any, Any, PhysicsPartDataFlag } },
    { "physics_particle_set_category_flags", { Any, PhysicsPartTypeFlag } },
    { "physics_particle_set_flags", { Any, PhysicsPartTypeFlag } },
    { "physics_particle_set_group_flags", { Any, PhysicsGroupFlag } },
    { "physics_pause_enable", { Bool } },
    { "physics_test_overlap", { Any, Any, Any, Object } },
    { "physics_world_draw_debug", { PhysicsDrawFlag } },
    { "place_meeting", { Any, Any, Object } },
    { "position_change", { Any, Any, Object, Bool } },
    { "position_meeting", { Any, Any, Object } },
    { "random_use_old_version", { Bool } },
    { "room_assign", { Room, Room } },
    { "room_duplicate", { Room } },
    { "room_exists", { Room } },
    { "room_get_name", { Room } },
    { "room_goto", { Room } },
    { "room_instance_add", { Room, Any, Any, Object } },
    { "room_instance_clear", { Room } },
    { "room_next", { Room } },
    { "room_previous", { Room } },
    { "room_set_background", { Room, Any, Bool, Bool, Background, Any, Any, Bool, Bool, Any, Any, Any } },
    { "room_set_background_colour", { Room, Color, Bool } },
    { "room_set_height", { Room, Any } },
    { "room_set_persistent", { Room, Bool } },
    { "room_set_view_enabled", { Room, Any } },
    { "room_set_width", { Room, Any } },
    { "room_tile_add", { Room, Background, Any, Any, Any, Any, Any, Any, Any } },
    { "room_tile_add_ext", { Room, Background, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any } },
    { "room_tile_clear", { Room } },
    { "script_execute", { Script, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any } },
    { "script_exists", { Script } },
    { "script_get_name", { Script } },
    { "shader_enable_corner_id", { Bool } },
    { "shader_get_sampler_index", { Shader, Any } },
    { "shader_get_uniform", { Shader, Any } },
    { "shader_is_compiled", { Shader } },
    { "shader_set", { Shader } },
    { "show_debug_overlay", { Bool } },
    { "show_error", { Any, Bool } },
    { "skeleton_animation_list", { Sprite, Any } },
    { "skeleton_attachment_create", { Any, Sprite, Any, Any, Any, Any, Any, Any } },
    { "skeleton_collision_draw_set", { Bool } },
    { "skeleton_skin_list", { Sprite, Any } },
    { "skeleton_slot_data", { Sprite, Any } },
    { "sound_add", { Any, Any, Bool } },
    { "sound_delete", { Sound } },
    { "sound_exists", { Sound } },
    { "sound_fade", { Sound, Any, Any } },
    { "sound_get_name", { Sound } },
    { "sound_isplaying", { Sound } },
    { "sound_loop", { Sound } },
    { "sound_play", { Sound } },
    { "sound_replace", { Sound, Any, Any, Bool } },
    { "sound_stop", { Sound } },
    { "sound_volume", { Sound, Any } },
    { "sprite_add", { Any, Any, Bool, Bool, Any, Any } },
    { "sprite_add_from_surface", { Sprite, Any, Any, Any, Any, Any, Bool, Bool } },
    { "sprite_assign", { Sprite, Sprite } },
    { "sprite_create_from_surface", { Any, Any, Any, Any, Any, Bool, Bool, Any, Any } },
    { "sprite_delete", { Sprite } },
    { "sprite_duplicate", { Sprite } },
    { "sprite_exists", { Sprite } },
    { "sprite_flush", { Sprite } },
    { "sprite_get_bbox_bottom", { Sprite } },
    { "sprite_get_bbox_left", { Sprite } },
    { "sprite_get_bbox_right", { Sprite } },
    { "sprite_get_bbox_top", { Sprite } },
    { "sprite_get_collision_mask", { Sprite, Bool, Any, Any, Any, Any, Any, Any, Any } },
    { "sprite_get_height", { Sprite } },
    { "sprite_get_name", { Sprite } },
    { "sprite_get_number", { Sprite } },
    { "sprite_get_texture", { Sprite, Any } },
    { "sprite_get_uvs", { Sprite, Any } },
    { "sprite_get_width", { Sprite } },
    { "sprite_get_xoffset", { Sprite } },
    { "sprite_get_yoffset", { Sprite } },
    { "sprite_merge", { Sprite, Sprite } },
    { "sprite_prefetch", { Sprite } },
    { "sprite_replace", { Sprite, Any, Any, Bool, Bool, Any, Any } },
    { "sprite_save", { Sprite, Any, Any } },
    { "sprite_save_strip", { Sprite, Any } },
    { "sprite_set_alpha_from_sprite", { Sprite, Sprite } },
    { "sprite_set_cache_size", { Sprite, Any } },
    { "sprite_set_cache_size_ext", { Sprite, Any, Any } },
    { "sprite_set_offset", { Sprite, Any, Any } },
    { "steam_activate_overlay", { SteamOverlay } },
    { "steam_create_leaderboard", { Any, LBSort, LBDisplay } },
    { "steam_ugc_create_item", { Any, UGCFiletype } },
    { "steam_ugc_create_query_all", { UGCQuery, UGCMatch, Any } },
    { "steam_ugc_create_query_all_ex", { UGCQuery, UGCMatch, Any, Any, Any } },
    { "steam_ugc_create_query_user", { UGCList, UGCMatch, UGCSort, Any } },
    { "steam_ugc_create_query_user_ex", { UGCList, UGCMatch, UGCSort, Any, Any, Any, Any } },
    { "steam_ugc_set_item_visibility", { Any, UGCVisibility } },
    { "texture_set_blending", { Bool } },
    { "texture_set_interpolation", { Bool } },
    { "texture_set_interpolation_ext", { Any, Bool } },
    { "texture_set_repeat", { Bool } },
    { "texture_set_repeat_ext", { Any, Bool } },
    { "tile_add", { Background, Any, Any, Any, Any, Any, Any, Any } },
    { "tile_set_background", { Any, Background } },
    { "tile_set_blend", { Any, Color } },
    { "tile_set_visible", { Any, Bool } },
    { "timeline_clear", { Timeline } },
    { "timeline_delete", { Timeline } },
    { "timeline_exists", { Timeline } },
    { "timeline_get_name", { Timeline } },
    { "timeline_max_moment", { Timeline } },
    { "timeline_moment_add_script", { Timeline, Any, Script } },
    { "timeline_moment_clear", { Timeline, Any } },
    { "timeline_size", { Timeline } },
    { "vertex_colour", { Any, Color, Any } },
    { "vertex_format_add_custom", { VType, VUsage } },
    { "vertex_submit", { Any, Primitive, Any } },
    { "virtual_key_add", { Any, Any, Any, Any, KeyCode } },
    { "win8_livetile_queue_enable", { Bool } },
    { "win8_search_enable", { Script } },
    { "win8_settingscharm_add_entry", { Any, Script } },
    { "win8_settingscharm_add_xaml_entry", { Any, Any, Any, Script, Bool } },
    { "win8_share_file", { Any, Any, Any, Bool } },
    { "win8_share_image", { Any, Any, Any, Bool } },
    { "win8_share_screenshot", { Any, Any, Bool } },
    { "win8_share_text", { Any, Any, Any, Bool } },
    { "win8_share_url", { Any, Any, Any, Bool } },
    { "window_set_colour", { Color } },
    { "window_set_cursor", { Cursor } },
    { "window_set_fullscreen", { Bool } },
    { "winphone_tile_background_colour", { Color } },
};
